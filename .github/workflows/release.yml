# Nome do Workflow
name: Build and Create Release

# Gatilho (Trigger)
# Roda quando um push é feito para 'main' e o 'manifest.json' foi alterado.
on:
  push:
    branches:
      - main
    paths:
      - "public/manifest.json"

# Tarefas (Jobs)
jobs:
  build-and-release:
    # Máquina virtual para rodar o job
    runs-on: ubuntu-latest

    # Permissões para criar a release
    permissions:
      contents: write

    # Passos a serem executados
    steps:
      # 1. Faz o checkout do código do repositório
      - name: Checkout code
        uses: actions/checkout@v4

      # 2. Configura o ambiente Node.js
      # Essencial para poder instalar dependências e rodar o build.
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          # Use a versão do Node.js compatível com seu projeto
          node-version: "20"
          cache: "npm" # Habilita o cache para acelerar futuras instalações

      # 3. Instala as dependências do projeto
      - name: Install dependencies
        run: npm install

      # 4. Roda o script de build do React
      # Este comando irá criar a pasta 'build/' com os arquivos finais da extensão.
      - name: Build the extension
        run: npm run build

      # 5. Extrai a versao do manifest.json original para usar nos nomes
      - name: Extract version from manifest.json
        id: get_version
        # Lemos do manifest.json na pasta public/
        run: echo "version=$(jq -r .version public/manifest.json)" >> $GITHUB_OUTPUT

      # 6. Cria o nome do arquivo ZIP
      - name: Create ZIP file name
        id: zip_name
        run: echo "name=FocoTotal-Extention-v${{ steps.get_version.outputs.version }}.zip" >> $GITHUB_OUTPUT

      # 7. Compacta os arquivos da extensão JÁ COMPILADOS
      # O passo mais importante: entramos na pasta 'build' e compactamos o conteúdo dela.
      # Se sua pasta de build se chamar 'dist', troque 'build' por 'dist' abaixo.
      - name: Zip built extension files
        run: |
          cd dist
          zip -r ../${{ steps.zip_name.outputs.name }} .

      # 8. Cria a Tag e a Release no GitHub com o ZIP gerado
      - name: Create Release
        uses: softprops/action-gh-release@v2
        with:
          files: ${{ steps.zip_name.outputs.name }}
          tag_name: v${{ steps.get_version.outputs.version }}
          name: Release v${{ steps.get_version.outputs.version }}
          body: |
            Lançamento oficial da versão ${{ steps.get_version.outputs.version }} da extensão FocoTotal.

            **Assets:**
            - Arquivo de instalação (`.zip`) com os arquivos compilados.
          draft: false
          prerelease: false
